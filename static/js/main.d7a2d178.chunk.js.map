{"version":3,"sources":["components/Form/Alert.module.css","components/Form/transition/alert.module.css","components/Contacts/transition/pop.module.css","components/Contacts/transition/filter.module.css","components/redux/taskAction.js","components/redux/taskReducer.js","components/redux/store.js","components/Form/alert.js","components/Form/index.js","components/Contacts/index.js","components/Contacts/ContactFilter.js","components/App.js","index.js","components/Contacts/Contact.module.css","components/Form/Form.module.css"],"names":["module","exports","shortid","require","changeFilter","createAction","onRemoveItem","newObj","text","number","payload","contacts","id","items","createReducer","taskAction","state","action","filter","contact","indexOf","itemId","combineReducers","store","configureStore","reducer","taskReducer","Alert","className","style","container","Form","showAlert","handleChangeText","e","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","map","user","includes","setTimeout","onAddText","styles","header","CSSTransition","in","timeout","appear","classNames","unmountOnExit","title","this","redAlert","form","onSubmit","input","type","onChange","placeholder","input_number","country","button","disabled","Component","connect","dispatch","Contacts","onDelete","box_contact","TransitionGroup","component","list","length","key","popItem","item","onClick","PropsTypes","node","string","name","isRequired","func","mapDispatchToProps","contack","toLowerCase","onChangeFilter","filterStyle","label","input_cont","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7a2d178.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__1rc7v\",\"text\":\"Alert_text__22xAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__10tOI\",\"enterActive\":\"alert_enterActive__23mND\",\"exit\":\"alert_exit__WQGvv\",\"exitActive\":\"alert_exitActive__2U44I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2bpL5\",\"enterActive\":\"pop_enterActive__1TgHP\",\"exit\":\"pop_exit__20DOa\",\"exitActive\":\"pop_exitActive__3ql9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__3AX-_\",\"enterActive\":\"filter_enterActive__WgEPX\",\"exit\":\"filter_exit__2y5F1\",\"exitActive\":\"filter_exitActive__n1mOP\"};","// import actionTypes from './taskActionRTypes'\nimport {createAction} from '@reduxjs/toolkit'\nconst shortid = require('shortid');\n\n\nconst  changeFilter = createAction('contacts/changeFilter');\nconst onRemoveItem = createAction('contacts/remove');\nconst newObj = createAction('contacts/addContact', ({text,number}) => ({\n    payload:{\n        contacts:{\n            id:shortid(),\n            text,\n            number,\n        }\n    }\n}));\n\n\nexport default {\n    changeFilter,\n    newObj,\n    onRemoveItem,\n}","import {combineReducers} from 'redux';\n// import actionTypes from './taskActionRTypes'\nimport taskAction from './taskAction';\nimport {createReducer} from '@reduxjs/toolkit'\n\n\nconst newObj = (state, action) => {\n    return [...state, action.payload.contacts]\n}\nconst onRemoveItem = (state, action) => {\n    return state.filter(contact => contact.id.indexOf(action.payload.itemId) === -1)\n}\nconst changeFilter = (state,action) => {\n    return action.payload;\n}\n\n\n\n\nconst items = createReducer([],{\n    [taskAction.newObj]: newObj,\n    [taskAction.onRemoveItem]: onRemoveItem,\n});\n\nconst filter = createReducer('', {\n    [taskAction.changeFilter]:changeFilter\n});\n\n\n\nexport default combineReducers({\n    items,\n    filter,\n})\n","import taskReducer from './taskReducer'\nimport {configureStore} from '@reduxjs/toolkit';\n\n\nconst store = configureStore({\n        reducer:{\n           contacts:taskReducer,\n        },\n});\n\nexport default store;","import React from 'react'\nimport style from './Alert.module.css'\n\n\nconst Alert = ({text}) => {\n    \n    return (\n           <div className={style.container}>\n                <span className={style.text}> {text} </span>\n            </div>\n    )\n}\n\nexport default Alert;","import React, {Component}from 'react';\nimport {CSSTransition} from 'react-transition-group'\nimport styles from './Form.module.css'\nimport './transition/animation.css'\nimport redAlert from './transition/alert.module.css'\nimport MessageRed from './alert.js'\n\nimport taskAction from '../redux/taskAction'\nimport {connect} from 'react-redux'\n\n\n\nclass Form extends Component {\n    state={\n        text:'',\n        number:'',\n        showAlert:false,\n    }\n//change text in state\n    handleChangeText = e => {\n        this.setState({\n            text: e.target.value,\n        })\n    }\n//change number in state \n    handleChangeNumber = e => {\n        this.setState({\n            number: e.target.value,\n        })\n    }\n\n// push in store.state redux\n    handleSubmit = e =>{\n       e.preventDefault();\n       const {text,number} = this.state\n\n              //check for similar name\n        const contacts = this.props.state\n        const filterName = contacts.map(user => user.text)\n         \n        if(filterName.includes(text)){\n              // if name already -> it's messageRed \n            setTimeout(() => this.setState({showAlert:false}),2000)\n             this.setState({showAlert:true})\n        }else {\n              // if name not repeat -> it's ok \n            this.props.onAddText({text,number})\n        }\n\n    //remove input\n        this.setState({\n            text:'',\n            number:'',\n        })\n    }\n\n\nrender(){\n return (\n    <div className={styles.container}>\n        <div className={styles.header}>\n            <CSSTransition  in={true} timeout={500} appear={true} classNames=\"titleIn\" unmountOnExit>\n                    <h2 className={styles.title}> Phonebook </h2>\n            </CSSTransition>\n\n            <CSSTransition in={this.state.showAlert} timeout={250} classNames={redAlert} unmountOnExit>\n                     <MessageRed text=\"Contact is already\" />\n            </CSSTransition>\n        </div>\n\n    <form  className={styles.form} onSubmit={this.handleSubmit} >\n        <label>Name\n            <input \n            className={styles.input}\n            type=\"input\" \n            value={this.state.text}\n            onChange={this.handleChangeText}\n            placeholder=\"please write name\"\n            />\n         </label>\n\n         <label> Number\n            <input \n            className={styles.input_number}\n            type=\"input\" \n            country=\"US\"\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n            placeholder=\"number phone\"\n            />\n         </label>\n\n\n         <button \n            className={styles.button} \n            type=\"submit\"\n            disabled={!this.state.text}\n            >\n                Add contact \n         </button>\n    </form>   \n    </div>\n  )\n }\n}\n\n\n\nconst mapStateToProps = state => {\n      return {\n        state:state.contacts.items,  \n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddText:(text,number) => dispatch(taskAction.newObj(text,number)),\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Form);","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport style from './Contact.module.css'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport popItem from './transition/pop.module.css'\n\n\n// add redux connect \nimport {connect} from 'react-redux'\nimport taskAction from '../redux/taskAction'\n\n// func create list item \n\nconst Contacts = ({contacts, onDelete}) => {\n    return (\n    <div className={style.box_contact}>\n        <TransitionGroup component='ul'className={style.list} >\n               { contacts.length > 0 ? contacts.map((contact) => (\n                       <CSSTransition \n                            in={true} \n                            key={contact.id} \n                            classNames={popItem}\n                            timeout={250}\n                            unmountOnExit\n                            >\n                           <li className={style.item} >\n                               {contact.text} : {contact.number} \n                                <button className={style.button} onClick={()=> onDelete(contact.id)}>\n                                    x\n                                </button>\n                             </li>\n                       </CSSTransition> )\n                        )\n                : ''\n            }\n        </TransitionGroup>\n    </div>\n    )\n}\n\nContacts.PropsTypes = {\n    contacts:PropsTypes.node={\n        id:PropsTypes.string,\n        name:PropsTypes.string.isRequired,\n        number:PropsTypes.string.isRequired\n    },\n    onDelete:PropsTypes.func.isRequired,\n}\n\n\nconst mapStateToProps = (state) => {\n    const {items, filter} = state.contacts;\n// search similar name\n    const visibleContacts = items.filter(contack => contack.text.toLowerCase()\n    .includes(filter.toLowerCase()))  \n    return {\n        contacts: visibleContacts\n    }\n};\n\nconst mapDispatchToProps = {\n    onDelete:taskAction.onRemoveItem\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from 'react';\nimport style from './Contact.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport filterStyle from './transition/filter.module.css';\n\n\nimport {connect} from 'react-redux'\nimport taskAction from '../redux/taskAction'\n//Filter input for Contacts \nfunction ContactFilter ({value,onChangeFilter}){\n    return (\n        // не могу понять почему не работает CSSTransition\n        <CSSTransition in={true} classNames={filterStyle}  timeout={250} unmountOnExit >\n       \n        <div className={style.filter}>\n                <label  className={style.label}>\n                    Find contacts by name \n                        <input className={style.input_cont} type=\"text\"\n                            value={value}\n                            onChange={e => onChangeFilter(e.target.value)}\n                        />\n                </label>\n            </div>\n        </CSSTransition>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    value:state.contacts.filter\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter:taskAction.changeFilter\n} \n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactFilter);","import React from 'react'\nimport Form from './Form'\nimport ContactsList from './Contacts'\nimport ContactFilter from './Contacts/ContactFilter'\n\n\n\nfunction App () {\n        return (\n            <>\n                <Form />\n                <ContactFilter />        \n                <ContactsList/>\n            </>\n        )\n    }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './components/redux/store'\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Contact_filter__2cn7S\",\"input_cont\":\"Contact_input_cont__1GHcq\",\"label\":\"Contact_label__22BKO\",\"item\":\"Contact_item__3P6HO\",\"button\":\"Contact_button__3-gGv\",\"list\":\"Contact_list__3KXQg\",\"box_contact\":\"Contact_box_contact__33PdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Form_header__B1HhE\",\"title\":\"Form_title__lNS_Y\",\"container\":\"Form_container___cwBN\",\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\",\"input_number\":\"Form_input_number__2ZXKo\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}