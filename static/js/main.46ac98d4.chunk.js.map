{"version":3,"sources":["components/Form/Alert.module.css","components/Form/transition/alert.module.css","components/Contacts/transition/pop.module.css","components/Contacts/transition/filter.module.css","components/Contacts/Contact.module.css","components/redux/taskActionRTypes.js","components/redux/taskReducer.js","components/redux/store.js","components/Form/alert.js","components/redux/taskAction.js","components/Form/index.js","components/Contacts/index.js","components/Contacts/ContactFilter.js","components/App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","NEW_OBJ","CHANGE_FILTER","REMOVE","combineReducers","items","state","type","payload","actionTypes","contacts","SHOW_ALERT","filter","contact","id","indexOf","itemId","rootReducer","taskReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Alert","text","className","style","container","shortid","require","changeFilter","newObj","number","onRemoveItem","Form","showAlert","handleChangeText","e","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","map","user","includes","setTimeout","onAddText","styles","header","CSSTransition","in","timeout","appear","classNames","unmountOnExit","title","this","redAlert","form","onSubmit","input","onChange","placeholder","input_number","country","button","disabled","Component","connect","dispatch","taskAction","Contacts","onDelete","box_contact","TransitionGroup","component","list","length","key","popItem","item","onClick","PropsTypes","node","string","name","isRequired","func","mapDispatchToProps","contack","toLowerCase","onChangeFilter","filterStyle","label","input_cont","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ac98d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__1rc7v\",\"text\":\"Alert_text__22xAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__10tOI\",\"enterActive\":\"alert_enterActive__23mND\",\"exit\":\"alert_exit__WQGvv\",\"exitActive\":\"alert_exitActive__2U44I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2bpL5\",\"enterActive\":\"pop_enterActive__1TgHP\",\"exit\":\"pop_exit__20DOa\",\"exitActive\":\"pop_exitActive__3ql9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__3AX-_\",\"enterActive\":\"filter_enterActive__WgEPX\",\"exit\":\"filter_exit__2y5F1\",\"exitActive\":\"filter_exitActive__n1mOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Contact_filter__2cn7S\",\"input_cont\":\"Contact_input_cont__1GHcq\",\"label\":\"Contact_label__22BKO\",\"item\":\"Contact_item__3P6HO\",\"button\":\"Contact_button__3-gGv\",\"list\":\"Contact_list__3KXQg\",\"box_contact\":\"Contact_box_contact__33PdI\"};","const NEW_OBJ = 'contacts/addContact'\nconst CHANGE_FILTER = 'contacts/changeFilter'\nconst REMOVE = 'contacts/remove'\n\n\nexport default {\n    NEW_OBJ,\n    CHANGE_FILTER,\n    REMOVE,\n}","import {combineReducers} from 'redux';\nimport actionTypes from './taskActionRTypes'\n\n\n\nconst items = (state=[], { type, payload }) => {\n    switch(type) {\n        case actionTypes.NEW_OBJ:\n                return [...state, payload.contacts];\n\n        case actionTypes.SHOW_ALERT:\n            return \n\n        case actionTypes.REMOVE:\n                return  state.filter(contact => contact.id.indexOf(payload.itemId) === -1)\n        \n        default:\n                return state;\n    }\n};\n\nconst filter = (state = '', {type, payload }) => {\n    switch(type){\n        case actionTypes.CHANGE_FILTER:\n             return payload.filter;\n         \n             default:\n                 return state;\n    }\n};\n\nexport default combineReducers({\n    items,\n    filter,\n})\n","import {createStore, combineReducers} from 'redux';\nimport taskReducer from './taskReducer'\n\nconst rootReducer = combineReducers({\n        contacts:taskReducer,\n});\n\n\nconst store = createStore(\n     rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;","import React from 'react'\nimport style from './Alert.module.css'\n\n\nconst Alert = ({text}) => {\n    return (\n           <div className={style.container}>\n                <span className={style.text}> {text} </span>\n            </div>\n    )\n}\n\nexport default Alert;","import actionTypes from './taskActionRTypes'\nconst shortid = require('shortid');\n\n\nconst changeFilter = filter => ({\n        type: actionTypes.CHANGE_FILTER,\n        payload:{\n            filter,\n     },\n});\n\n//add new contact in state\nconst newObj = ({text,number}) => ({\n    type: actionTypes.NEW_OBJ,\n    payload:{\n        contacts:{\n            id:shortid(),\n            text,\n            number,\n        }\n    }\n})\n\nconst onRemoveItem = itemId =>({\n    type:actionTypes.REMOVE,\n    payload:{\n        itemId,\n    }\n})\n\n\nexport default {\n    changeFilter,\n    newObj,\n    onRemoveItem,\n}","import React, {Component}from 'react';\nimport {CSSTransition} from 'react-transition-group'\nimport styles from './Form.module.css'\nimport './transition/animation.css'\nimport redAlert from './transition/alert.module.css'\nimport MessageRed from './alert.js'\n\nimport taskAction from '../redux/taskAction'\nimport {connect} from 'react-redux'\n\n\n\nclass Form extends Component {\n    state={\n        text:'',\n        number:'',\n        showAlert:false,\n    }\n//change text in state\n    handleChangeText = e => {\n        this.setState({\n            text: e.target.value,\n        })\n    }\n//change number in state \n    handleChangeNumber = e => {\n        this.setState({\n            number: e.target.value,\n        })\n    }\n\n// push in store.state redux\n    handleSubmit = e =>{\n       e.preventDefault();\n       const {text,number} = this.state\n\n              //check for similar name\n        const contacts = this.props.state\n        const filterName = contacts.map(user => user.text)\n         \n        if(filterName.includes(text)){\n              // if name already -> it's messageRed \n            setTimeout(() => this.setState({showAlert:false}),2000)\n             this.setState({showAlert:true})\n        }else {\n              // if name not repeat -> it's ok \n            this.props.onAddText({text,number})\n        }\n\n    //remove input\n        this.setState({\n            text:'',\n            number:'',\n        })\n    }\n\n\nrender(){\n return (\n    <div className={styles.container}>\n        <div className={styles.header}>\n            <CSSTransition  in={true} timeout={500} appear={true} classNames=\"titleIn\" unmountOnExit>\n                    <h2 className={styles.title}> Phonebook </h2>\n            </CSSTransition>\n\n            <CSSTransition in={this.state.showAlert} timeout={250} classNames={redAlert} unmountOnExit>\n                     <MessageRed text=\"Contact is already\" />\n            </CSSTransition>\n        </div>\n\n    <form  className={styles.form} onSubmit={this.handleSubmit} >\n        <label>Name\n            <input \n            className={styles.input}\n            type=\"input\" \n            value={this.state.text}\n            onChange={this.handleChangeText}\n            placeholder=\"please write name\"\n            />\n         </label>\n\n         <label> Number\n            <input \n            className={styles.input_number}\n            type=\"input\" \n            country=\"US\"\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n            placeholder=\"number phone\"\n            />\n         </label>\n\n\n         <button \n            className={styles.button} \n            type=\"submit\"\n            disabled={!this.state.text}\n            >\n                Add contact \n         </button>\n    </form>   \n    </div>\n  )\n }\n}\n\n\n\nconst mapStateToProps = state => {\n      return {\n        state:state.contacts.items,  \n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddText:(text,number) => dispatch(taskAction.newObj(text,number)),\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Form);","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport style from './Contact.module.css'\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport popItem from './transition/pop.module.css'\n\n\n// add redux connect \nimport {connect} from 'react-redux'\nimport taskAction from '../redux/taskAction'\n\n// func create list item \n\nconst Contacts = ({contacts, onDelete}) => {\n    return (\n    <div className={style.box_contact}>\n        <TransitionGroup component='ul'className={style.list} >\n               { contacts.length > 0 ? contacts.map((contact) => (\n                       <CSSTransition \n                            in={true} \n                            key={contact.id} \n                            classNames={popItem}\n                            timeout={250}\n                            unmountOnExit\n                            >\n                           <li className={style.item} >\n                               {contact.text} : {contact.number} \n                                <button className={style.button} onClick={()=> onDelete(contact.id)}>\n                                    x\n                                </button>\n                             </li>\n                       </CSSTransition> )\n                        )\n                : ''\n            }\n        </TransitionGroup>\n    </div>\n    )\n}\n\nContacts.PropsTypes = {\n    contacts:PropsTypes.node={\n        id:PropsTypes.string,\n        name:PropsTypes.string.isRequired,\n        number:PropsTypes.string.isRequired\n    },\n    onDelete:PropsTypes.func.isRequired,\n}\n\n\nconst mapStateToProps = (state) => {\n    const {items, filter} = state.contacts;\n// search similar name\n    const visibleContacts = items.filter(contack => contack.text.toLowerCase()\n    .includes(filter.toLowerCase()))  \n    return {\n        contacts: visibleContacts\n    }\n};\n\nconst mapDispatchToProps = {\n    onDelete:taskAction.onRemoveItem\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from 'react';\nimport style from './Contact.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport filterStyle from './transition/filter.module.css';\n\n\nimport {connect} from 'react-redux'\nimport taskAction from '../redux/taskAction'\n//Filter input for Contacts \nfunction ContactFilter ({value,onChangeFilter}){\n    return (\n        // не могу понять почему не работает CSSTransition\n        <CSSTransition in={true} classNames={filterStyle}  timeout={250} unmountOnExit >\n       \n        <div className={style.filter}>\n                <label  className={style.label}>\n                    Find contacts by name \n                        <input className={style.input_cont} type=\"text\"\n                            value={value}\n                            onChange={e => onChangeFilter(e.target.value)}\n                        />\n                </label>\n            </div>\n        </CSSTransition>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    value:state.contacts.filter\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter:taskAction.changeFilter\n} \n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactFilter);","import React from 'react'\nimport Form from './Form'\nimport ContactsList from './Contacts'\nimport ContactFilter from './Contacts/ContactFilter'\n\n\n\nfunction App () {\n        return (\n            <>\n                <Form />\n                <ContactFilter />        \n                <ContactsList/>\n            </>\n        )\n    }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './components/redux/store'\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Form_header__B1HhE\",\"title\":\"Form_title__lNS_Y\",\"container\":\"Form_container___cwBN\",\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\",\"input_number\":\"Form_input_number__2ZXKo\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}